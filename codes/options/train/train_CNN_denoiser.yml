
#### general settings

name: Unet
use_tb_logger: true
model: Unet4
gpu_ids: [0]


#### datasets

datasets:
  train:
    name: XJ_train
    mode: LQGTRN_Seis_train
    #dataroot_GT: 'D:\dataset\SIDD_Medium_Srgb_Patches_512\GT' # path to training Clean images
    #dataroot_Noisy: 'D:\dataset\SIDD_Medium_Srgb_Patches_512\Noisy' # path to training Noisy images
    #dataroot_LQ: ~ # path to training reference LR images, not necessary, if not provided, LR images will be generated in dataloader
    dataroot_h5: '/home/shendi_mcj/datasets/seismic/fielddata/train'
    use_shuffle: true
    n_workers: 0  # per GPU
    batch_size: 64  #28
    GT_size: 32 # 144
    use_flip: true
    use_rot: true
    color: RGB
    data_mul: 5000 #Augmented dataset multiples
    agc: False
    sigma: 30
    noise_mode: 'B'
    dataset_type:

  val:
    name: XJ_test
    mode: LQGTRN_Seis_val
#    dataroot_GT: '/home/shendi_mcj/datasets/seismic/fielddata' # path to validation Clean images
#    dataroot_Noisy: '/home/shendi_mcj/datasets/seismic/fielddata' # path to validation Noisy images
    dataroot_LQ: ~ # path to validation reference LR images, not necessary, if not provided, LR images will be generated in dataloader
    dataroot_h5: '/home/shendi_mcj/datasets/seismic/fielddata/test'
    batch_size: 4 #val.size()

#### network structures

network_G:
  in_nc: 1
  out_nc: 1
  init: xavier


#### path

path:
  pretrain_model_G: #'/home/shendi_mcj/code/InvDN-mcj/experiments/InvDN_ResUnit_x4/models/78000_G.pth'
  strict_load: true
  resume_state: #'/home/shendi_mcj/code/InvDN-mcj/experiments/InvDN_ResUnit_x4/training_state/78000.state' #path ~


#### training settings: learning rate scheme, loss

train:
  lr_G: !!float 2e-4
  beta1: 0.9
  beta2: 0.999
  niter: 600000 # default=600000 train_size epoch: niter/(train_size/batch_size)
  warmup_iter: -1  # no warm up

  lr_scheme: MultiStepLR
  lr_steps: [100000, 200000, 300000, 400000, 500000] #[100000, 200000, 300000, 400000, 500000]
  lr_gamma: 0.5


  manual_seed: 10

  val_freq: !!float 5000 # current_step % val_freq == 0 val_freq=train_size/batch_size

  lambda_fit_forw: 16.
  weight_decay_G: !!float 1e-8
  gradient_clipping: 10


#### logger

logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5000 # 1  save_checkpoint_freq=train_size/batch_size
